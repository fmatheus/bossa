<?xml version="1.0" standalone="no"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<article id="bossa-api" class="specification">
  <articleinfo>
    <title>Bossa API HOWTO</title>
    <corpauthor>The BigBross Team</corpauthor>
    <abstract> 
      <title>Abstract</title>
      <para>
        This HOWTO is a hands-on overview of the Bossa API. Use it as
        a starting point on the use of Bossa, before going to the more
        detailed API reference in the <ulink
        url="http://www.bigbross.com/bossa/doc/javadocs">javadocs</ulink>.
      </para>
    </abstract>
    <copyright>
      <year>2003</year>
      <holder>OpenBR Sistemas S/C Ltda.</holder>
    </copyright>
  </articleinfo>

<sect1 id="intro">
  <title>Introduction</title>
  
  <para>
    Bossa is a workflow engine written in Java
    <emphasis>designed</emphasis> to be embedded. Therefore, Bossa is
    organized as a library to be used by server side applications
    (especially web oriented ones) that need workflow services.
  </para>

  <para>
    This HOWTO is a hands-on overview of the Bossa API. It was created
    as a starting point on the use of Bossa, less complete than the
    more detailed API reference but giving a practical overview of the
    API. The comprehensive API reference can be found in the <ulink
    url="http://www.bigbross.com/bossa/doc/javadocs">javadocs</ulink>
    and for an explanation of Bossa's general design and philosophy
    see the <ulink
    url="http://www.bigbross.com/bossa/doc/manifesto/bossa-manifesto.html">
    Bossa Manifesto</ulink>.
  </para>

</sect1>

<sect1 id="start">
  <title>Starting Bossa</title>

  <para>
    Starting the Bossa engine is very simple, it is only necessary to
    create an object of class <classname>Bossa</classname> using the
    static method <methodname>createBossa</methodname>. The Bossa
    library is organized in a way that you can access all methods from
    a single object. You can have more than one instance of this
    object, each one represent a <emphasis>different</emphasis> Bossa
    engine. <xref linkend="create"/> shows how to create a new Bossa
    engine.
  </para>

  <example id="create"><title>Creating a new Bossa engine.</title>
    <programlisting>
    Bossa bossa = Bossa.createBossa("build/BossaState");
    </programlisting>
  </example>

  <para>
     The method <methodname>createBossa</methodname> receives as a
     parameter the name of a directory where Bossa will store its
     state. Bossa only needs a writable directory to persist its data,
     check the application has the appropriate permissions. If the
     provided directory is empty, Bossa will start a new engine
     instance, otherwise it will automatically reload the state of the
     last execution.
  </para>

  <para>
     Keep the reference to the just created Bossa engine and pass it
     to the objects that will need to interact with it. <emphasis>Do
     not</emphasis> create more the one engine instance pointing to
     the same state directory.  </para>

</sect1>

<sect1 id="case-type">
  <title>Case Types Management</title>

  <para>
    The case type management operation of the Bossa engine are
    accessed throw the a <classname>CaseTypeManager</classname> object
    that is part of the engine.
  </para>

  <para>how it creates and registers a case type</para>

</sect1>

<sect1 id="resource">
  <title>Resources Management</title>

  <para>how it creates resources and add then to case type
  groups</para>

</sect1>

<sect1 id="task">
  <title>Work Items Handling</title>

  <para>how it lists the work items.</para>

  <para>how a work item is processed.</para>
</sect1>

</article>
