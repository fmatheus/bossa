
Bossa 0.7.0 "50cm Of Snow", 2004-02-09
--------------------------------------

* Added the initial infrastructure to support timed transitions. Zero
  wait (instantaneus) transitions already work. In the process, transition
  creation was made more robust.

* Improved the notification system. Listeners can always expect a
  consistent system state to work on.

* Removed notification for some internal resource events and added
  notification for tokens arriving or leaving a place.

* Added a real time source as the transient Bossa default time source.


Bossa 0.6.0 "Self Referential Integrity", 2004-01-19
----------------------------------------------------

* Simplified the case type creation API. No more need of calling buildMap()
  before creating edges and the initial marking is set when creating the
  places.

* Added support to self loops in the case type definition Petri net.
  Now it is possible for a transition to use a place as source and sink
  at the same time.
  
* Two new notification events: activation and deactivation of a work item.

* Added the ability to export old history events to a XML file and
  purge them.

* Made some small adjustments to our chained exceptions so that they work
  nicely with J2SE 1.4.


Bossa 0.5.0 "3.500 BC", 2003-12-03
----------------------------------

* Added an historian to track events that happened in the engine. It is
  possible to query events by time range and filter them by case type,
  case and resource.

* Added history support to the Bossa Browser to demo the new history
  feature.

* Improved the transient Bossa: now it is possible to embed it
  deterministically with relation to time using time sources.

* Fixed the resource filtering in the notification bus. Now it works.

* Fixed leaking resource registries in case type and case type manager.


Bossa 0.4.1 "Fall", 2003-11-14
------------------------------

* Fixed a wrong access modifier in the constructor of BossaFactory. Now
  it is possible to configure your Bossa instance.

* Fixed a subtle bug caused by the new Prevayler 2.0 transaction filtering.


Bossa 0.4.0 "Maple Leaf", 2003-11-06
------------------------------------

* Updated internally to the Prevayler 2.0 API.

* Added internal notification of events through a notification bus,
  with filtering based on event type and affected resource.
  
* Notified the main bossa events to the notification bus.

* Added the option of a transient Bossa that could be embedded in prevalent
  systems.

* Added a Bossa factory to help configure your Bossa instance.

* Documentation and javadoc fixes.


Bossa 0.3.1 "Easter Egg", 2003-04-29
------------------------------------

* Fixed a stupid bug (#89) that rendered our proposed API useless.

* Added the last bit of API documentation.


Bossa 0.3.0 "Document It and They Will Come", 2003-03-14
--------------------------------------------------------

* We now check if all case variables are set at case type creation
  time.

* Added an optimization in the edge weight evaluation. If the
  expression is an integer it won't go to BSF.

* Added documentation: the overview Bossa Manifesto and an API HOWTO.


Bossa 0.2.1 "A New Hope, Repackaged", 2003-02-25
------------------------------------------------

* Automated the release policy (source, binary+javadoc and
  dependencies packages). Made a new release to test it.


Bossa 0.2.0 "A New Hope", 2003-02-19
------------------------------------

* First release. Hello world! Brace yourself!

* Fully operational workflow engine.

* Workflow defined programmatically using Petri nets as modeling
  abstraction, using JavaScript expressions as edge weights.

* Register, unregister and list workflow definitions (case types).

* List cases, work item and activities by case type or case.

* Handle all life cycle of a workflow task: activation as work item,
  opening the work item as activity and finally the closing or
  cancellation of the activity.

* Resource management, with users and groups organized as access
  control lists.

* Resource specification in the case type using complex set
  expressions.

* Local resources by case type, allowing local mapping between case
  type resources and locally registered resources.

* Local resources by case, allowing more flexible resource
  specification.

* List work items and activities by resource capability.

* Transparent persistence. Uses only a writable directory, nothing
  more. 

* High quality, lightweight, commented and tested Java code.
